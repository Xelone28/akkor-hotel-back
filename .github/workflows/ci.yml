name: Build, Test, and Publish

on:
  push:
    branches: [main]
    tags:
      - "v*"

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      
      - name: Create .env file  
        run: |
          echo "POSTGRES_USER=akkor_hotel" >> .env
          echo "POSTGRES_PASSWORD=4citesupinfo2025" >> .env
          echo "POSTGRES_DB=akkor_hotel" >> .env
          echo "S3_ENDPOINT=http://localhost:9000" >> .env
          echo "S3_ACCESS_KEY=minioadmin" >> .env
          echo "S3_SECRET_KEY=minioadmin" >> .env
          echo "S3_BUCKET=testbucket" >> .env
          echo "DATABASE_URL=postgresql+asyncpg://akkor_hotel:4citesupinfo2025@localhost:5432/akkor_hotel" >> .env

      - name: Check .env file
        run: cat .env  # Debugging ‚Äì Show contents of .env

      - name: Set up environment variables
        run: |
          echo "DATABASE_URL=postgresql+asyncpg://akkor_hotel:4citesupinfo2025@localhost:5432/akkor_hotel" >> $GITHUB_ENV
          echo "S3_ENDPOINT=http://localhost:9000" >> $GITHUB_ENV
          echo "S3_BUCKET=testbucket" >> $GITHUB_ENV
          echo "S3_ACCESS_KEY=minioadmin" >> $GITHUB_ENV
          echo "S3_SECRET_KEY=minioadmin" >> $GITHUB_ENV

      - name: Set up Docker  
        uses: docker/setup-buildx-action@v2

      - name: Start all services with Docker Compose  
        run: docker compose up --build -d  

      - name: Wait for services  
        run: |
          echo "Waiting for PostgreSQL & MinIO..."
          sleep 20  # Add a delay to ensure services start

      - name: Install Poetry  
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV  # ‚úÖ CORRECTED
          echo "export PATH=$HOME/.local/bin:$PATH" >> ~/.bashrc
          source ~/.bashrc  # Reload the shell
          poetry --version

      - name: Install dependencies  
        run: poetry install --no-root
          
      - name: Run Tests  
        run: |
          echo "üîç Checking DATABASE_URL..."
          echo "DATABASE_URL=${DATABASE_URL}"  # Debug print
          poetry run pytest -v app/tests

      - name: Stop all services  
        run: docker compose down -v
