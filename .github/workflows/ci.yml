name: Build, Test, and Publish

on:
  push:
    branches: [main]
    tags:
      - "v*"

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: mypassword
          POSTGRES_DB: mydatabase
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U myuser -d mydatabase"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      minio:
        image: lazybit/minio
        ports:
          - 9000:9000
        env:
          MINIO_ROOT_USER: minioadmin
          MINIO_ROOT_PASSWORD: minioadmin
        options: --name=minio --health-cmd "curl http://localhost:9000/minio/health/live"  
        
    steps:
      - name: Set up Docker Compose
        uses: docker/setup-compose-action@v1
        
      - name: Checkout the code
        uses: actions/checkout@v4
      
      - name: Set up Python  
        uses: actions/setup-python@v4  
        with:
          python-version: "3.12"

      - name: Install Poetry  
        run: |
          pip install poetry
          poetry config virtualenvs.create false

      - name: Install dependencies  
        run: poetry install --no-root

      - name: Ensure FastAPI container starts  
        run: docker-compose up -d fastapi_app

      - name: Wait for all services  
        run: |
          echo "Waiting for PostgreSQL, Minio & FastAPI..."
          sleep 10

      - name: Run Tests  
        env:
          DATABASE_URL: "postgresql+asyncpg://myuser:mypassword@postgres:5432/mydatabase"
          S3_ENDPOINT: "http://minio:9000"
          S3_ACCESS_KEY: "minioadmin"
          S3_SECRET_KEY: "minioadmin"
          S3_BUCKET: "testbucket"
        run: pytest -v app/tests
